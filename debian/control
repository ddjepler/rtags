Source: rtags
Section: devel
Priority: optional
Build-Depends: debhelper (>= 9), gcc, asciidoc
Maintainer: Jeff Epler <jepler@dsndata.com>
Standards-Version: 3.9.4

Package: rtags
Section: devel
Architecture: any
Depends: ${misc:Depends}, python
Description: a client/server application that indexes C/C++ code
 RTags is a client/server application that indexes C/C++ code and keeps
 a persistent file-based database of references, declarations,
 definitions, symbolnames etc. There's also limited support for
 ObjC/ObjC++. It allows you to find symbols by name (including nested
 class and namespace scope). Most importantly we give you proper
 follow-symbol and find-references support. We also have neat little
 things like rename-symbol, integration with clang's "fixits"
 (http://clang.llvm.org/diagnostics.html). We also integrate with
 flymake using clang's vastly superior errors and warnings. Since
 RTags constantly will reindex "dirty" files you get live updates of
 compiler errors and warnings. Since we already know how to compile
 your sources we have a way to quickly bring up the preprocessed output
 of the current source file in a buffer.
 .
 While existing taggers like gnu global, cscope, etags, ctags etc do a
 decent job for C they often fall a little bit short for C++. With its
 incredible lexical complexity, parsing C++ is an incredibly hard task
 and we make no bones about the fact that the only reason we are able
 to improve on the current tools is because of clang
 (http://clang.llvm.org/). RTags is named RTags in recognition of
 Roberto Raggi on whose C++ parser we intended to base this project but
 he assured us clang was the way to go. The name stuck though.
